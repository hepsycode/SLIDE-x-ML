[kernel] Parsing FRAMAC_SHARE/libc/__fc_builtin_for_normalization.i (no preprocessing)
[kernel] Parsing ../../../../../../../cc4cs_bambu/benchmarkBasic/qsort/thrd.c (with preprocessing)
[metrics] Halstead metrics
          ================
          Total operators: 446 
          Distinct operators: 37 
          Total_operands: 219 
          Distinct operands: 45 
          Program length: 665 
          Vocabulary size: 82 
          Program volume: 4227.77 
          Effort: 380640.41 
          Program level: 0.01 
          Difficulty level: 90.03 
          Time to implement: 21146.69 
          Bugs delivered: 1.75 
          
          
          Global statistics (Halstead)
          ============================
          Operators
          ---------
            typedef: 30
            array: 2
            break: 3
            if: 8
            for: 4
            while: 2
            ): 35
            ,: 30
            {: 11
            (: 35
            }: 11
            []: 43
            ;: 64
            +: 16
            ++: 3
            -: 20
            +=: 1
            ==: 1
            <: 3
            =: 35
            <=: 2
            >>: 1
            >: 4
            --: 5
            >=: 2
            TARGET_TYPE: 2
            short: 4
            long: 16
            int: 10
            signed: 14
            TARGET_INDEX: 3
            void: 2
            unsigned: 14
            char: 6
            int8_t: 2
            enum  { n25 }: 1
            uint8_t: 1
            
          Operands
          --------
            a: 8
            l: 26
            k: 4
            n: 3
            istack: 7
            ir: 15
            temp: 11
            Frama_C_bzero: 1
            arr: 39
            j: 18
            Frama_C_copy_block: 1
            flag: 2
            qsort: 1
            jstack: 9
            i: 18
            FC_BUILTIN: 2
            80: 1
            99: 1
            11: 1
            2: 1
            125: 1
            70: 1
            89: 1
            67: 2
            10: 1
            49: 1
            27: 1
            127: 1
            33: 1
            109: 1
            87: 1
            7: 1
            1: 22
            100: 1
            81: 1
            61: 2
            72: 1
            116: 1
            25: 1
            5: 1
            19: 1
            96: 1
            0: 3
            74: 1
            55: 1
